 immich-server:
    container_name: immich_server
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
    command: [ "start.sh", "immich" ]
    networks:
      - traefik-public
      - immich
    labels:
      traefik.enable: "true"
      traefik.http.services.media-immich-api.loadbalancer.server.port: "3001"
      traefik.http.routers.media-immich-api.rule: "Host(`immich.<MY_DOMAIN>`) && Pathprefix(`/api`)"
      traefik.http.routers.media-immich-api.middlewares: my-torblock@docker, service-immich-api-strip
      traefik.http.middlewares.service-immich-api-strip.stripprefix.prefixes: "/api"
      traefik.http.routers.media-immich-api.tls: true
      traefik.http.routers.media-immich-api.tls.certresolver: letsencrypt
      traefik.http.routers.media-immich-api.entrypoints: websecure
    volumes:
      - /path/to/upload:/usr/src/app/upload
    env_file:
      - ./services/immich/.env
    depends_on:
      - redis
      - database
    restart: unless-stopped

  immich-web:
    container_name: immich_web
    image: ghcr.io/immich-app/immich-web:${IMMICH_VERSION:-release}
    networks:
      - traefik-public
      - immich
    env_file:
      - ./services/immich/.env
    labels:
      traefik.enable: "true"
      traefik.http.services.media-immich.loadbalancer.server.port: "3000"
      traefik.http.routers.media-immich.rule: "Host(`immich.<MY_DOMAIN>`)"
      traefik.http.routers.media-immich.middlewares: my-torblock@docker
      traefik.http.routers.media-immich.tls: true
      traefik.http.routers.media-immich.tls.certresolver: letsencrypt
      traefik.http.routers.media-immich.entrypoints: websecure
    restart: unless-stopped

networks:  
  immich:
  traefik-public:
    external: true
